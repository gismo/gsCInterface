
!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT gsCVectorInt * gsVectorInt_create(void);

      function gsVectorInt_create( ) bind(c,name='gsVectorInt_create')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_create
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR)                  :: gsVectorInt_create
      end function gsVectorInt_create

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT gsCVectorInt * gsVectorInt_create_r (int rows);

      function gsVectorInt_create_r(rows) bind(c,name='gsVectorInt_create_r')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_create_r
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR)                  :: gsVectorInt_create_r
         integer(C_INT),   value      :: rows
      end function gsVectorInt_create_r

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT gsCVectorInt * gsVectorInt_create_rd(int rows, int * data);

      function gsVectorInt_create_rd(rows, data) bind(c,name='gsVectorInt_create_rd')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_create_rd
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR)                  :: gsVectorInt_create_rd
         integer(C_INT),   value      :: rows
         integer(C_INT)               :: data(*)
      end function gsVectorInt_create_rd

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT void gsVectorInt_delete(gsCVectorInt * m);

      subroutine gsVectorInt_delete(m) bind(c,name='gsVectorInt_delete')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_delete
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR),      value      :: m
      end subroutine gsVectorInt_delete

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT void gsVectorInt_print(gsCVectorInt * m);

      subroutine gsVectorInt_print(m) bind(c,name='gsVectorInt_print')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_print
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR),      value      :: m
      end subroutine gsVectorInt_print

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT int * gsVectorInt_data(gsCVectorInt * m);

      function gsVectorInt_data(m) bind(c,name='gsVectorInt_data')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_data
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR)                  :: gsVectorInt_data
         type(C_PTR),      value      :: m
      end function gsVectorInt_data

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT void gsVectorInt_transposeInPlace(gsCVectorInt * m);

      subroutine gsVectorInt_transposeInPlace(m) bind(c,name='gsVectorInt_transposeInPlace')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_transposeInPlace
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR),      value      :: m
      end subroutine gsVectorInt_transposeInPlace

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT int gsVectorInt_rows(gsCVectorInt * m);

      function gsVectorInt_rows(m) bind(c,name='gsVectorInt_rows')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_rows
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         integer(C_INT)               :: gsVectorInt_rows
         type(C_PTR),      value      :: m
      end function gsVectorInt_rows

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT int gsVectorInt_cols(gsCVectorInt * m);

      function gsVectorInt_cols(m) bind(c,name='gsVectorInt_cols')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_cols
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         integer(C_INT)               :: gsVectorInt_cols
         type(C_PTR),      value      :: m
      end function gsVectorInt_cols

!------------------------------------------------------------------------------------------------------------
!     GISMO_EXPORT void gsVectorInt_setZero(gsCVectorInt * m);

      subroutine gsVectorInt_setZero(m) bind(c,name='gsVectorInt_setZero')
#ifdef _WIN32
         !dir$ attributes stdcall     :: gsVectorInt_setZero
#endif
         use, intrinsic               :: iso_c_binding
         implicit none
         type(C_PTR),      value      :: m
      end subroutine gsVectorInt_setZero

!------------------------------------------------------------------------------------------------------------
